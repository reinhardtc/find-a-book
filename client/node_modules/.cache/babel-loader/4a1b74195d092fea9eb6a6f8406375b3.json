{"ast":null,"code":"var _jsxFileName = \"/Users/colinreinhardt/Desktop/Bootcamp/weekly-challenges/find-a-book/client/src/components/SignupForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/react-hooks'; // import { createUser } from '../utils/API';\n\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  }); // set state for form validation\n\n  const [validated] = useState(false); // set state for alert\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // check if form has everything (as per react-bootstrap docs)\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const mutationResponse = await addUser({\n        variables: {\n          email: userFormData.email,\n          password: userFormData.password,\n          username: userFormData.username\n        }\n      });\n      const {\n        token,\n        user\n      } = mutationResponse.data.addUser;\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    dismissible: true,\n    onClose: () => setShowAlert(false),\n    show: showAlert,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"Something went wrong with your signup!\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Your username\",\n    name: \"username\",\n    onChange: handleInputChange,\n    value: userFormData.username,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"Username is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Your email address\",\n    name: \"email\",\n    onChange: handleInputChange,\n    value: userFormData.email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, \"Email is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Your password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    value: userFormData.password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, \"Password is required!\")), /*#__PURE__*/React.createElement(Button, {\n    disabled: !(userFormData.username && userFormData.email && userFormData.password),\n    type: \"submit\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, \"Submit\")));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/colinreinhardt/Desktop/Bootcamp/weekly-challenges/find-a-book/client/src/components/SignupForm.js"],"names":["React","useState","Form","Button","Alert","useMutation","ADD_USER","Auth","SignupForm","userFormData","setUserFormData","username","email","password","validated","showAlert","setShowAlert","handleInputChange","event","name","value","target","addUser","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","mutationResponse","variables","token","user","data","console","log","login","err","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/react-hooks';\n\n// import { createUser } from '../utils/API';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n\t// set initial form state\n\tconst [userFormData, setUserFormData] = useState({\n\t\tusername: '',\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\t// set state for form validation\n\tconst [validated] = useState(false);\n\t// set state for alert\n\tconst [showAlert, setShowAlert] = useState(false);\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetUserFormData({ ...userFormData, [name]: value });\n\t};\n\n\tconst [addUser] = useMutation(ADD_USER);\n\n\tconst handleFormSubmit = async event => {\n\t\tevent.preventDefault();\n\n\t\t// check if form has everything (as per react-bootstrap docs)\n\t\tconst form = event.currentTarget;\n\t\tif (form.checkValidity() === false) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\ttry {\n\t\t\tconst mutationResponse = await addUser({\n\t\t\t\tvariables: {\n\t\t\t\t\temail: userFormData.email,\n\t\t\t\t\tpassword: userFormData.password,\n\t\t\t\t\tusername: userFormData.username,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst { token, user } = mutationResponse.data.addUser;\n\t\t\tconsole.log(user);\n\t\t\tAuth.login(token);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tsetShowAlert(true);\n\t\t}\n\n\t\tsetUserFormData({\n\t\t\tusername: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{/* This is needed for the validation functionality above */}\n\t\t\t<Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n\t\t\t\t{/* show alert if server response is bad */}\n\t\t\t\t<Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant=\"danger\">\n\t\t\t\t\tSomething went wrong with your signup!\n\t\t\t\t</Alert>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"username\">Username</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Your username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tvalue={userFormData.username}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Username is required!</Form.Control.Feedback>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"email\">Email</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Your email address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tvalue={userFormData.email}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Email is required!</Form.Control.Feedback>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"password\">Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Your password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tvalue={userFormData.password}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">Password is required!</Form.Control.Feedback>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={!(userFormData.username && userFormData.email && userFormData.password)}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvariant=\"success\"\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</>\n\t);\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}