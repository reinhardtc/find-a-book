{"ast":null,"code":"var _jsxFileName = \"/Users/colinreinhardt/Desktop/Bootcamp/weekly-challenges/find-a-book/client/src/pages/SavedBooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({}); // use this to determine if `useEffect()` hook needs to run again\n\n  const userDataLength = Object.keys(userData).length;\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]); // create function that accepts the book's mongo _id value as param and deletes the book from the database\n\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser); // upon success, remove book's id from localStorage\n\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  }; // if data isn't here yet, say so\n\n\n  if (!userDataLength) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }\n    }, \"LOADING...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, \"Viewing saved books!\"))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, userData.savedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    }, book.description), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block btn-danger\",\n      onClick: () => handleDeleteBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    }, \"Delete this Book!\")));\n  }))));\n};\n\nexport default SavedBooks;","map":{"version":3,"sources":["/Users/colinreinhardt/Desktop/Bootcamp/weekly-challenges/find-a-book/client/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","getMe","deleteBook","Auth","removeBookId","SavedBooks","userData","setUserData","userDataLength","Object","keys","length","getUserData","token","loggedIn","getToken","response","ok","Error","user","json","err","console","error","handleDeleteBook","bookId","updatedUser","savedBooks","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n\tconst [userData, setUserData] = useState({});\n\n\t// use this to determine if `useEffect()` hook needs to run again\n\tconst userDataLength = Object.keys(userData).length;\n\n\tuseEffect(() => {\n\t\tconst getUserData = async () => {\n\t\t\ttry {\n\t\t\t\tconst token = Auth.loggedIn() ? Auth.getToken() : null;\n\n\t\t\t\tif (!token) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst response = await getMe(token);\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error('something went wrong!');\n\t\t\t\t}\n\n\t\t\t\tconst user = await response.json();\n\t\t\t\tsetUserData(user);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\n\t\tgetUserData();\n\t}, [userDataLength]);\n\n\t// create function that accepts the book's mongo _id value as param and deletes the book from the database\n\tconst handleDeleteBook = async bookId => {\n\t\tconst token = Auth.loggedIn() ? Auth.getToken() : null;\n\n\t\tif (!token) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await deleteBook(bookId, token);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('something went wrong!');\n\t\t\t}\n\n\t\t\tconst updatedUser = await response.json();\n\t\t\tsetUserData(updatedUser);\n\t\t\t// upon success, remove book's id from localStorage\n\t\t\tremoveBookId(bookId);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\t// if data isn't here yet, say so\n\tif (!userDataLength) {\n\t\treturn <h2>LOADING...</h2>;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Jumbotron fluid className=\"text-light bg-dark\">\n\t\t\t\t<Container>\n\t\t\t\t\t<h1>Viewing saved books!</h1>\n\t\t\t\t</Container>\n\t\t\t</Jumbotron>\n\t\t\t<Container>\n\t\t\t\t<h2>\n\t\t\t\t\t{userData.savedBooks.length\n\t\t\t\t\t\t? `Viewing ${userData.savedBooks.length} saved ${\n\t\t\t\t\t\t\t\tuserData.savedBooks.length === 1 ? 'book' : 'books'\n\t\t\t\t\t\t  }:`\n\t\t\t\t\t\t: 'You have no saved books!'}\n\t\t\t\t</h2>\n\t\t\t\t<CardColumns>\n\t\t\t\t\t{userData.savedBooks.map(book => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card key={book.bookId} border=\"dark\">\n\t\t\t\t\t\t\t\t{book.image ? (\n\t\t\t\t\t\t\t\t\t<Card.Img src={book.image} alt={`The cover for ${book.title}`} variant=\"top\" />\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Card.Title>{book.title}</Card.Title>\n\t\t\t\t\t\t\t\t\t<p className=\"small\">Authors: {book.authors}</p>\n\t\t\t\t\t\t\t\t\t<Card.Text>{book.description}</Card.Text>\n\t\t\t\t\t\t\t\t\t<Button className=\"btn-block btn-danger\" onClick={() => handleDeleteBook(book.bookId)}>\n\t\t\t\t\t\t\t\t\t\tDelete this Book!\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</CardColumns>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}