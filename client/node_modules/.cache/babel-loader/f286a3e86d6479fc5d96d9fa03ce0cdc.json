{"ast":null,"code":"var _jsxFileName = \"/Users/colinreinhardt/Desktop/Bootcamp/weekly-challenges/find-a-book/client/src/pages/SearchBooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(''); // create state to hold saved bookId values\n\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds()); // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  }); // create method to search for books and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  }; // create function to handle saving a book to our database\n\n\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId); // get token\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      } // if book successfully saves to user's account, save book id to state\n\n\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }, \"Search for Books!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, searchedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 8\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 10\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 10\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 10\n      }\n    }, book.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, (savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId)) ? 'This book has already been saved!' : 'Save this Book!')));\n  }))));\n};\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/colinreinhardt/Desktop/Bootcamp/weekly-challenges/find-a-book/client/src/pages/SearchBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBook","searchGoogleBooks","saveBookIds","getSavedBookIds","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","error","handleSaveBook","bookToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBookId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n\t// create state for holding returned google api data\n\tconst [searchedBooks, setSearchedBooks] = useState([]);\n\t// create state for holding our search field data\n\tconst [searchInput, setSearchInput] = useState('');\n\n\t// create state to hold saved bookId values\n\tconst [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n\t// set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n\t// learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\tuseEffect(() => {\n\t\treturn () => saveBookIds(savedBookIds);\n\t});\n\n\t// create method to search for books and set state on form submit\n\tconst handleFormSubmit = async event => {\n\t\tevent.preventDefault();\n\n\t\tif (!searchInput) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await searchGoogleBooks(searchInput);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('something went wrong!');\n\t\t\t}\n\n\t\t\tconst { items } = await response.json();\n\n\t\t\tconst bookData = items.map(book => ({\n\t\t\t\tbookId: book.id,\n\t\t\t\tauthors: book.volumeInfo.authors || ['No author to display'],\n\t\t\t\ttitle: book.volumeInfo.title,\n\t\t\t\tdescription: book.volumeInfo.description,\n\t\t\t\timage: book.volumeInfo.imageLinks?.thumbnail || '',\n\t\t\t}));\n\n\t\t\tsetSearchedBooks(bookData);\n\t\t\tsetSearchInput('');\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\t// create function to handle saving a book to our database\n\tconst handleSaveBook = async bookId => {\n\t\t// find the book in `searchedBooks` state by the matching id\n\t\tconst bookToSave = searchedBooks.find(book => book.bookId === bookId);\n\n\t\t// get token\n\t\tconst token = Auth.loggedIn() ? Auth.getToken() : null;\n\n\t\tif (!token) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await saveBook(bookToSave, token);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('something went wrong!');\n\t\t\t}\n\n\t\t\t// if book successfully saves to user's account, save book id to state\n\t\t\tsetSavedBookIds([...savedBookIds, bookToSave.bookId]);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Jumbotron fluid className=\"text-light bg-dark\">\n\t\t\t\t<Container>\n\t\t\t\t\t<h1>Search for Books!</h1>\n\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t\t<Col xs={12} md={8}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tname=\"searchInput\"\n\t\t\t\t\t\t\t\t\tvalue={searchInput}\n\t\t\t\t\t\t\t\t\tonChange={e => setSearchInput(e.target.value)}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search for a book\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs={12} md={4}>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"success\" size=\"lg\">\n\t\t\t\t\t\t\t\t\tSubmit Search\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t</Form>\n\t\t\t\t</Container>\n\t\t\t</Jumbotron>\n\n\t\t\t<Container>\n\t\t\t\t<h2>\n\t\t\t\t\t{searchedBooks.length\n\t\t\t\t\t\t? `Viewing ${searchedBooks.length} results:`\n\t\t\t\t\t\t: 'Search for a book to begin'}\n\t\t\t\t</h2>\n\t\t\t\t<CardColumns>\n\t\t\t\t\t{searchedBooks.map(book => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card key={book.bookId} border=\"dark\">\n\t\t\t\t\t\t\t\t{book.image ? (\n\t\t\t\t\t\t\t\t\t<Card.Img src={book.image} alt={`The cover for ${book.title}`} variant=\"top\" />\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Card.Title>{book.title}</Card.Title>\n\t\t\t\t\t\t\t\t\t<p className=\"small\">Authors: {book.authors}</p>\n\t\t\t\t\t\t\t\t\t<Card.Text>{book.description}</Card.Text>\n\t\t\t\t\t\t\t\t\t{Auth.loggedIn() && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={savedBookIds?.some(savedBookId => savedBookId === book.bookId)}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block btn-info\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleSaveBook(book.bookId)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{savedBookIds?.some(savedBookId => savedBookId === book.bookId)\n\t\t\t\t\t\t\t\t\t\t\t\t? 'This book has already been saved!'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'Save this Book!'}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</CardColumns>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}